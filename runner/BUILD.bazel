load("@gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@rules_go//go:def.bzl", "go_library")

# gazelle:lang go
# gazelle:build_file_name BUILD.bazel

# Go config
# gazelle:go_naming_convention import
# gazelle:go_naming_convention_external import

# Use the gazelle bazel modules instead of go.mod modules
# gazelle:resolve_regexp go github.com/bazelbuild/bazel-gazelle/(.*) @gazelle//$1
# gazelle:resolve_regexp go github.com/bazel-contrib/rules_python/gazelle/(.*) @rules_python_gazelle_plugin//$1
# gazelle:resolve_regexp go github.com/bazelbuild/rules_go/(.*) @rules_go//$1
# gazelle:resolve_regexp go github.com/EngFlow/gazelle_cc/(.*) @gazelle_cc//$1
# gazelle:resolve_regexp go github.com/aspect-build/aspect-gazelle/(common|language)/(.*) @aspect_gazelle//$1/$2
# gazelle:resolve_regexp go github.com/aspect-build/aspect-gazelle/runner/(.*) //$1

gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "@gazelle//language/go:go_default_library",
        "@contrib_rules_jvm//java/gazelle",
    ],
)

gazelle(
    name = "gazelle",
    extra_args = ["-index=lazy"],
    gazelle = ":gazelle_bin",
)

gazelle(
    name = "gazelle.check",
    gazelle = ":gazelle_bin",
    mode = "diff",
)

gazelle_binary(
    name = "gazelle_prebuilt_bin",
    languages = [
        "//language/bzl",
        "//language/python",
        "@aspect_gazelle//language/js",
        "@aspect_gazelle//language/kotlin",
        "@gazelle_cc//language/cc",
        "@gazelle//language/proto",
        "@gazelle//language/go",
    ],
)

go_library(
    name = "runner",
    srcs = ["runner.go"],
    importpath = "github.com/aspect-build/aspect-gazelle/runner",
    visibility = ["//visibility:public"],
    deps = [
        "//language/bzl",
        "//language/python",
        "//pkg/git",
        "//pkg/ibp",
        "//progress",
        "//vendored/gazelle",
        "@aspect_gazelle//common/bazel",
        "@aspect_gazelle//language/js",
        "@aspect_gazelle//language/orion",
        "@contrib_rules_jvm//java/gazelle",
        "@gazelle//config",
        "@gazelle//language",
        "@gazelle//language/go",
        "@gazelle//language/proto",
        "@gazelle_cc//language/cc",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_x_term//:term",
    ],
)
